#+TITLE: Notes on Python Solutions for Leetcode

These are my notes on solutions for Leetcode problems in Python.
I outline my thought process for myself.
This enables me to reevaluate how to solve different problems and lets me remember why I did certain things. 


* 414 Third Maximum Number

** First solution attempt [The dump one]

So the first attempt would be to take a list and remove duplicates and the sort the list in descending order and take the element at index 2 or if the length is < 3 we return the first element

** Second solution [WiP]

How to solve this in o(n)


* 415 Adding Strings

For each entry in each string add the other and we need to do it in revers. 
This should take o(n) of the longest string.

- We determine which list is the shortest and iterate both in reverse based on index of the smallest
- It runs (roughly) in O(n) if we exclude string split from python as we cannot address strings by index for assignment
 
* 496 Next Greater element

This can be done in O(N * M) which is not good but it is the first solution I will go for.
Where for each elem N in nums1 you check if there is a high element in nums2

* 559 Maximum Depth of N-ary Tree

- We do not know the depth of any path and therefore we need to traverse the full tree.
- we need to find the longest child length 
